---
import Navbar from '../components/Navbar.astro';
import '@fontsource-variable/inter';
import '@fontsource-variable/open-sans';
import '@fontsource-variable/inconsolata';
import '@fontsource/inclusive-sans';

import { ViewTransitions } from 'astro:transitions';
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <!-- party-confetti pck -->
    <script
      src="https://cdn.jsdelivr.net/npm/party-js@latest/bundle/party.min.js"
    ></script>
    <!-- Google tag (gtag.js) -->
    <script
      is:inline
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-PJTDK4S87B"
    ></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());
      gtag('config', 'G-PJTDK4S87B');
    </script>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="let's talk ðŸ§‰"
    />
    <meta
      name="viewport"
      content="width=device-width"
    />
    <link
      rel="icon"
      type="image/x-icon"
      href="/favicon.ico"
    />
    <meta
      name="generator"
      content={Astro.generator}
    />
    <meta
      name="theme-color"
      content="black"
    />
    <link
      rel="canonical"
      href="https://www.emikinder.dev/"
    />
    <meta
      property="og:title"
      content="emi kinder | dev"
    />
    <meta
      property="og:description"
      content="Frontend developer portfolio"
    />
    <meta
      name="twitter:card"
      content="summary"
    />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="bg-customBlack text-customWhite">
    <Navbar />
    <slot />
    <div
      id="progress-bar"
      class="fixed bottom-0 left-0 h-1 bg-customPink z-50"
    >
    </div>
  </body><style is:global>
    :root {
      color-scheme: dark;
      scroll-behavior: smooth;
    }

    body {
      /* cursor: none; */
    }

    .custom-padding {
      @apply pl-4 sm:pl-16;
    }

    .underline-animation {
      position: relative;
    }

    .underline-animation::after {
      content: '';
      position: absolute;
      bottom: -1px;
      left: 0;
      width: 0;
      height: 2px;
      background-color: currentColor;
      transition: width 0.3s ease;
    }

    .underline-animation:hover::after {
      width: 100%;
    }

    .underline-animation:not(:hover)::after {
      right: 0;
      left: auto;
      width: 0;
      transition: width 0.3s ease;
    }

    .center-class {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    h1 {
      font-family: 'Open Sans Variable', sans-serif;
      font-style: bold;
      font-size: 250px;
    }

    h2 {
      font-family: 'Open Sans Variable', sans-serif;
      font-style: bold;
      font-size: 100px;
    }

    h3 {
      font-family: 'Open Sans Variable', sans-serif;
      font-style: bold;
      font-size: 70px;
    }

    h4 {
      font-family: 'Open Sans Variable', sans-serif;
      font-style: normal;
      font-size: 40px;
    }

    h5 {
      font-family: 'Inconsolata Variable', sans-serif;
      font-style: normal;
      font-size: 20px;
    }

    h6 {
      font-family: 'Inconsolata Variable', sans-serif;
      font-style: normal;
      font-size: 10px;
    }

    .font-inconsolata {
      font-family: 'Inconsolata Variable', sans-serif;
    }

    .font-inclusive {
      font-family: 'Inclusive Sans', sans-serif;
    }

    .h-100vh {
      height: 100svh;
    }

  </style>
</html>
<script>
  document.addEventListener('scroll', () => {
    const scrollTop = document.documentElement.scrollTop;
    const scrollHeight =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    const scrollPercentage = (scrollTop / scrollHeight) * 100;
    document.getElementById('progress-bar').style.width =
      scrollPercentage + '%';
  });
</script>
